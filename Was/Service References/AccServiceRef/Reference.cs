//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3623
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40818.0
// 
namespace Was.AccServiceRef {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightStatus", Namespace="http://schemas.datacontract.org/2004/07/Was.Web")]
    public partial class LightStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string StatusIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusIDField, value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightReferralSource", Namespace="http://schemas.datacontract.org/2004/07/Was.Web")]
    public partial class LightReferralSource : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string ReferralSourceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferralSourceID {
            get {
                return this.ReferralSourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferralSourceIDField, value) != true)) {
                    this.ReferralSourceIDField = value;
                    this.RaisePropertyChanged("ReferralSourceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightSale", Namespace="http://schemas.datacontract.org/2004/07/Was.Web")]
    public partial class LightSale : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AmountField;
        
        private string AmountDueField;
        
        private string CustomerField;
        
        private string InvoiceDateField;
        
        private string InvoiceNumberField;
        
        private string InvoiceStatusField;
        
        private string SaleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountField, value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountDue {
            get {
                return this.AmountDueField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountDueField, value) != true)) {
                    this.AmountDueField = value;
                    this.RaisePropertyChanged("AmountDue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDateField, value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumber {
            get {
                return this.InvoiceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumberField, value) != true)) {
                    this.InvoiceNumberField = value;
                    this.RaisePropertyChanged("InvoiceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceStatus {
            get {
                return this.InvoiceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceStatusField, value) != true)) {
                    this.InvoiceStatusField = value;
                    this.RaisePropertyChanged("InvoiceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SaleID {
            get {
                return this.SaleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleIDField, value) != true)) {
                    this.SaleIDField = value;
                    this.RaisePropertyChanged("SaleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightEmployee", Namespace="http://schemas.datacontract.org/2004/07/Was.Web")]
    public partial class LightEmployee : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EmployeeIDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeIDField, value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightCustomer", Namespace="http://schemas.datacontract.org/2004/07/Was.Web")]
    public partial class LightCustomer : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CustomerIDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightSale2", Namespace="http://schemas.datacontract.org/2004/07/Was.Web")]
    public partial class LightSale2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BackorderSaleIDField;
        
        private string CommentField;
        
        private string CostCentreIDField;
        
        private string CurrencyIDField;
        
        private Was.AccServiceRef.LightCustomer CustomerField;
        
        private string CustomerIDField;
        
        private string CustomerPONumberField;
        
        private string DateField;
        
        private string DaysTillPaidField;
        
        private string DestinationCountryField;
        
        private string FreightTaxCodeIDField;
        
        private string InvoiceDateField;
        
        private string InvoiceDeliveryIDField;
        
        private string InvoiceNumberField;
        
        private string InvoiceStatusIDField;
        
        private string InvoiceTypeIDField;
        
        private string IsAutoRecordedField;
        
        private string IsHistoricalField;
        
        private string IsPrintedField;
        
        private string IsTaxInclusiveField;
        
        private string IsThirteenthPeriodField;
        
        private string LinesPurgedField;
        
        private string MemoField;
        
        private double OutstandingBalanceField;
        
        private string PreAuditTrailField;
        
        private string PromisedDateField;
        
        private string ReferralSourceIDField;
        
        private string SaleIDField;
        
        private string SalesPersonIDField;
        
        private string ShipToAddressField;
        
        private string ShipToAddressLine1Field;
        
        private string ShipToAddressLine2Field;
        
        private string ShipToAddressLine3Field;
        
        private string ShipToAddressLine4Field;
        
        private Was.AccServiceRef.LightShippingMethod ShippingMethodField;
        
        private string ShippingMethodIDField;
        
        private double TaxExclusiveFreightField;
        
        private double TaxInclusiveFreightField;
        
        private Was.AccServiceRef.LightTerms TermsField;
        
        private string TermsIDField;
        
        private double TotalCreditsField;
        
        private double TotalDepositsField;
        
        private double TotalDiscountsField;
        
        private double TotalLinesField;
        
        private double TotalPaidField;
        
        private double TotalTaxField;
        
        private double TransactionExchangeRateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackorderSaleID {
            get {
                return this.BackorderSaleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BackorderSaleIDField, value) != true)) {
                    this.BackorderSaleIDField = value;
                    this.RaisePropertyChanged("BackorderSaleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostCentreID {
            get {
                return this.CostCentreIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CostCentreIDField, value) != true)) {
                    this.CostCentreIDField = value;
                    this.RaisePropertyChanged("CostCentreID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyID {
            get {
                return this.CurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyIDField, value) != true)) {
                    this.CurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Was.AccServiceRef.LightCustomer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerPONumber {
            get {
                return this.CustomerPONumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerPONumberField, value) != true)) {
                    this.CustomerPONumberField = value;
                    this.RaisePropertyChanged("CustomerPONumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DaysTillPaid {
            get {
                return this.DaysTillPaidField;
            }
            set {
                if ((object.ReferenceEquals(this.DaysTillPaidField, value) != true)) {
                    this.DaysTillPaidField = value;
                    this.RaisePropertyChanged("DaysTillPaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationCountry {
            get {
                return this.DestinationCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationCountryField, value) != true)) {
                    this.DestinationCountryField = value;
                    this.RaisePropertyChanged("DestinationCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreightTaxCodeID {
            get {
                return this.FreightTaxCodeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FreightTaxCodeIDField, value) != true)) {
                    this.FreightTaxCodeIDField = value;
                    this.RaisePropertyChanged("FreightTaxCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDateField, value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDeliveryID {
            get {
                return this.InvoiceDeliveryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDeliveryIDField, value) != true)) {
                    this.InvoiceDeliveryIDField = value;
                    this.RaisePropertyChanged("InvoiceDeliveryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumber {
            get {
                return this.InvoiceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumberField, value) != true)) {
                    this.InvoiceNumberField = value;
                    this.RaisePropertyChanged("InvoiceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceStatusID {
            get {
                return this.InvoiceStatusIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceStatusIDField, value) != true)) {
                    this.InvoiceStatusIDField = value;
                    this.RaisePropertyChanged("InvoiceStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceTypeID {
            get {
                return this.InvoiceTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceTypeIDField, value) != true)) {
                    this.InvoiceTypeIDField = value;
                    this.RaisePropertyChanged("InvoiceTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsAutoRecorded {
            get {
                return this.IsAutoRecordedField;
            }
            set {
                if ((object.ReferenceEquals(this.IsAutoRecordedField, value) != true)) {
                    this.IsAutoRecordedField = value;
                    this.RaisePropertyChanged("IsAutoRecorded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsHistorical {
            get {
                return this.IsHistoricalField;
            }
            set {
                if ((object.ReferenceEquals(this.IsHistoricalField, value) != true)) {
                    this.IsHistoricalField = value;
                    this.RaisePropertyChanged("IsHistorical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsPrinted {
            get {
                return this.IsPrintedField;
            }
            set {
                if ((object.ReferenceEquals(this.IsPrintedField, value) != true)) {
                    this.IsPrintedField = value;
                    this.RaisePropertyChanged("IsPrinted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsTaxInclusive {
            get {
                return this.IsTaxInclusiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsTaxInclusiveField, value) != true)) {
                    this.IsTaxInclusiveField = value;
                    this.RaisePropertyChanged("IsTaxInclusive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsThirteenthPeriod {
            get {
                return this.IsThirteenthPeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.IsThirteenthPeriodField, value) != true)) {
                    this.IsThirteenthPeriodField = value;
                    this.RaisePropertyChanged("IsThirteenthPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinesPurged {
            get {
                return this.LinesPurgedField;
            }
            set {
                if ((object.ReferenceEquals(this.LinesPurgedField, value) != true)) {
                    this.LinesPurgedField = value;
                    this.RaisePropertyChanged("LinesPurged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Memo {
            get {
                return this.MemoField;
            }
            set {
                if ((object.ReferenceEquals(this.MemoField, value) != true)) {
                    this.MemoField = value;
                    this.RaisePropertyChanged("Memo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OutstandingBalance {
            get {
                return this.OutstandingBalanceField;
            }
            set {
                if ((this.OutstandingBalanceField.Equals(value) != true)) {
                    this.OutstandingBalanceField = value;
                    this.RaisePropertyChanged("OutstandingBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreAuditTrail {
            get {
                return this.PreAuditTrailField;
            }
            set {
                if ((object.ReferenceEquals(this.PreAuditTrailField, value) != true)) {
                    this.PreAuditTrailField = value;
                    this.RaisePropertyChanged("PreAuditTrail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PromisedDate {
            get {
                return this.PromisedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PromisedDateField, value) != true)) {
                    this.PromisedDateField = value;
                    this.RaisePropertyChanged("PromisedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferralSourceID {
            get {
                return this.ReferralSourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferralSourceIDField, value) != true)) {
                    this.ReferralSourceIDField = value;
                    this.RaisePropertyChanged("ReferralSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SaleID {
            get {
                return this.SaleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleIDField, value) != true)) {
                    this.SaleIDField = value;
                    this.RaisePropertyChanged("SaleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesPersonID {
            get {
                return this.SalesPersonIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesPersonIDField, value) != true)) {
                    this.SalesPersonIDField = value;
                    this.RaisePropertyChanged("SalesPersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToAddress {
            get {
                return this.ShipToAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToAddressField, value) != true)) {
                    this.ShipToAddressField = value;
                    this.RaisePropertyChanged("ShipToAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToAddressLine1 {
            get {
                return this.ShipToAddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToAddressLine1Field, value) != true)) {
                    this.ShipToAddressLine1Field = value;
                    this.RaisePropertyChanged("ShipToAddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToAddressLine2 {
            get {
                return this.ShipToAddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToAddressLine2Field, value) != true)) {
                    this.ShipToAddressLine2Field = value;
                    this.RaisePropertyChanged("ShipToAddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToAddressLine3 {
            get {
                return this.ShipToAddressLine3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToAddressLine3Field, value) != true)) {
                    this.ShipToAddressLine3Field = value;
                    this.RaisePropertyChanged("ShipToAddressLine3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToAddressLine4 {
            get {
                return this.ShipToAddressLine4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToAddressLine4Field, value) != true)) {
                    this.ShipToAddressLine4Field = value;
                    this.RaisePropertyChanged("ShipToAddressLine4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Was.AccServiceRef.LightShippingMethod ShippingMethod {
            get {
                return this.ShippingMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingMethodField, value) != true)) {
                    this.ShippingMethodField = value;
                    this.RaisePropertyChanged("ShippingMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingMethodID {
            get {
                return this.ShippingMethodIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingMethodIDField, value) != true)) {
                    this.ShippingMethodIDField = value;
                    this.RaisePropertyChanged("ShippingMethodID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TaxExclusiveFreight {
            get {
                return this.TaxExclusiveFreightField;
            }
            set {
                if ((this.TaxExclusiveFreightField.Equals(value) != true)) {
                    this.TaxExclusiveFreightField = value;
                    this.RaisePropertyChanged("TaxExclusiveFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TaxInclusiveFreight {
            get {
                return this.TaxInclusiveFreightField;
            }
            set {
                if ((this.TaxInclusiveFreightField.Equals(value) != true)) {
                    this.TaxInclusiveFreightField = value;
                    this.RaisePropertyChanged("TaxInclusiveFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Was.AccServiceRef.LightTerms Terms {
            get {
                return this.TermsField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsField, value) != true)) {
                    this.TermsField = value;
                    this.RaisePropertyChanged("Terms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsID {
            get {
                return this.TermsIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsIDField, value) != true)) {
                    this.TermsIDField = value;
                    this.RaisePropertyChanged("TermsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalCredits {
            get {
                return this.TotalCreditsField;
            }
            set {
                if ((this.TotalCreditsField.Equals(value) != true)) {
                    this.TotalCreditsField = value;
                    this.RaisePropertyChanged("TotalCredits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalDeposits {
            get {
                return this.TotalDepositsField;
            }
            set {
                if ((this.TotalDepositsField.Equals(value) != true)) {
                    this.TotalDepositsField = value;
                    this.RaisePropertyChanged("TotalDeposits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalDiscounts {
            get {
                return this.TotalDiscountsField;
            }
            set {
                if ((this.TotalDiscountsField.Equals(value) != true)) {
                    this.TotalDiscountsField = value;
                    this.RaisePropertyChanged("TotalDiscounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalLines {
            get {
                return this.TotalLinesField;
            }
            set {
                if ((this.TotalLinesField.Equals(value) != true)) {
                    this.TotalLinesField = value;
                    this.RaisePropertyChanged("TotalLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalPaid {
            get {
                return this.TotalPaidField;
            }
            set {
                if ((this.TotalPaidField.Equals(value) != true)) {
                    this.TotalPaidField = value;
                    this.RaisePropertyChanged("TotalPaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalTax {
            get {
                return this.TotalTaxField;
            }
            set {
                if ((this.TotalTaxField.Equals(value) != true)) {
                    this.TotalTaxField = value;
                    this.RaisePropertyChanged("TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TransactionExchangeRate {
            get {
                return this.TransactionExchangeRateField;
            }
            set {
                if ((this.TransactionExchangeRateField.Equals(value) != true)) {
                    this.TransactionExchangeRateField = value;
                    this.RaisePropertyChanged("TransactionExchangeRate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightShippingMethod", Namespace="http://schemas.datacontract.org/2004/07/Was.Web")]
    public partial class LightShippingMethod : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string ShippingMethodIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingMethodID {
            get {
                return this.ShippingMethodIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingMethodIDField, value) != true)) {
                    this.ShippingMethodIDField = value;
                    this.RaisePropertyChanged("ShippingMethodID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightTerms", Namespace="http://schemas.datacontract.org/2004/07/Was.Web")]
    public partial class LightTerms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string TermsIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsID {
            get {
                return this.TermsIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsIDField, value) != true)) {
                    this.TermsIDField = value;
                    this.RaisePropertyChanged("TermsID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightTaxCode", Namespace="http://schemas.datacontract.org/2004/07/Was.Web")]
    public partial class LightTaxCode : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string TaxCodeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCodeID {
            get {
                return this.TaxCodeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeIDField, value) != true)) {
                    this.TaxCodeIDField = value;
                    this.RaisePropertyChanged("TaxCodeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightComment", Namespace="http://schemas.datacontract.org/2004/07/Was.Web")]
    public partial class LightComment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CommentIDField;
        
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentID {
            get {
                return this.CommentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentIDField, value) != true)) {
                    this.CommentIDField = value;
                    this.RaisePropertyChanged("CommentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightInvoiceType", Namespace="http://schemas.datacontract.org/2004/07/Was.Web")]
    public partial class LightInvoiceType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string InvoiceTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceTypeID {
            get {
                return this.InvoiceTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceTypeIDField, value) != true)) {
                    this.InvoiceTypeIDField = value;
                    this.RaisePropertyChanged("InvoiceTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightCurrency", Namespace="http://schemas.datacontract.org/2004/07/Was.Web")]
    public partial class LightCurrency : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CurrencyIDField;
        
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyID {
            get {
                return this.CurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyIDField, value) != true)) {
                    this.CurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightInvoiceDelivery", Namespace="http://schemas.datacontract.org/2004/07/Was.Web")]
    public partial class LightInvoiceDelivery : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string InvoiceDeliveryIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDeliveryID {
            get {
                return this.InvoiceDeliveryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDeliveryIDField, value) != true)) {
                    this.InvoiceDeliveryIDField = value;
                    this.RaisePropertyChanged("InvoiceDeliveryID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="AccServiceRef.SaleService")]
    public interface SaleService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/DoList", ReplyAction="urn:SaleService/DoListResponse")]
        System.IAsyncResult BeginDoList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndDoList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/ListInvoiceStatus", ReplyAction="urn:SaleService/ListInvoiceStatusResponse")]
        System.IAsyncResult BeginListInvoiceStatus(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightStatus> EndListInvoiceStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/ListReferralSources", ReplyAction="urn:SaleService/ListReferralSourcesResponse")]
        System.IAsyncResult BeginListReferralSources(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightReferralSource> EndListReferralSources(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/ListSalesWithPaging", ReplyAction="urn:SaleService/ListSalesWithPagingResponse")]
        System.IAsyncResult BeginListSalesWithPaging(System.DateTime start, System.DateTime end, System.Nullable<int> CustomerID, string InvoiceStatusID, int startIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale> EndListSalesWithPaging(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/GetSalesCount", ReplyAction="urn:SaleService/GetSalesCountResponse")]
        System.IAsyncResult BeginGetSalesCount(System.DateTime start, System.DateTime end, System.Nullable<int> CustomerID, string InvoiceStatusID, System.AsyncCallback callback, object asyncState);
        
        int EndGetSalesCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/ListSalespersons", ReplyAction="urn:SaleService/ListSalespersonsResponse")]
        System.IAsyncResult BeginListSalespersons(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightEmployee> EndListSalespersons(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/ListCustomers", ReplyAction="urn:SaleService/ListCustomersResponse")]
        System.IAsyncResult BeginListCustomers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCustomer> EndListCustomers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/RetrieveSale", ReplyAction="urn:SaleService/RetrieveSaleResponse")]
        System.IAsyncResult BeginRetrieveSale(System.Nullable<int> SaleID, System.AsyncCallback callback, object asyncState);
        
        Was.AccServiceRef.LightSale2 EndRetrieveSale(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/ListSales", ReplyAction="urn:SaleService/ListSalesResponse")]
        System.IAsyncResult BeginListSales(System.DateTime start, System.DateTime end, System.Nullable<int> CustomerID, string InvoiceStatusID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale> EndListSales(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/ListTaxCodes", ReplyAction="urn:SaleService/ListTaxCodesResponse")]
        System.IAsyncResult BeginListTaxCodes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTaxCode> EndListTaxCodes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/ListShippingMethods", ReplyAction="urn:SaleService/ListShippingMethodsResponse")]
        System.IAsyncResult BeginListShippingMethods(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightShippingMethod> EndListShippingMethods(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/ListComments", ReplyAction="urn:SaleService/ListCommentsResponse")]
        System.IAsyncResult BeginListComments(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightComment> EndListComments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/ListInvoiceTypes", ReplyAction="urn:SaleService/ListInvoiceTypesResponse")]
        System.IAsyncResult BeginListInvoiceTypes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceType> EndListInvoiceTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/ListCurrency", ReplyAction="urn:SaleService/ListCurrencyResponse")]
        System.IAsyncResult BeginListCurrency(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCurrency> EndListCurrency(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/ListInvoiceDeliveries", ReplyAction="urn:SaleService/ListInvoiceDeliveriesResponse")]
        System.IAsyncResult BeginListInvoiceDeliveries(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceDelivery> EndListInvoiceDeliveries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SaleService/ListTerms", ReplyAction="urn:SaleService/ListTermsResponse")]
        System.IAsyncResult BeginListTerms(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTerms> EndListTerms(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface SaleServiceChannel : Was.AccServiceRef.SaleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class DoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ListInvoiceStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListInvoiceStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightStatus> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightStatus>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ListReferralSourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListReferralSourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightReferralSource> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightReferralSource>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ListSalesWithPagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListSalesWithPagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetSalesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSalesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ListSalespersonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListSalespersonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightEmployee> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightEmployee>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ListCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCustomer> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCustomer>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class RetrieveSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Was.AccServiceRef.LightSale2 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Was.AccServiceRef.LightSale2)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ListSalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListSalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ListTaxCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListTaxCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTaxCode> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTaxCode>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ListShippingMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListShippingMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightShippingMethod> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightShippingMethod>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ListCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightComment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightComment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ListInvoiceTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListInvoiceTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ListCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCurrency> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCurrency>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ListInvoiceDeliveriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListInvoiceDeliveriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceDelivery> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceDelivery>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ListTermsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListTermsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTerms> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTerms>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SaleServiceClient : System.ServiceModel.ClientBase<Was.AccServiceRef.SaleService>, Was.AccServiceRef.SaleService {
        
        private BeginOperationDelegate onBeginDoListDelegate;
        
        private EndOperationDelegate onEndDoListDelegate;
        
        private System.Threading.SendOrPostCallback onDoListCompletedDelegate;
        
        private BeginOperationDelegate onBeginListInvoiceStatusDelegate;
        
        private EndOperationDelegate onEndListInvoiceStatusDelegate;
        
        private System.Threading.SendOrPostCallback onListInvoiceStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginListReferralSourcesDelegate;
        
        private EndOperationDelegate onEndListReferralSourcesDelegate;
        
        private System.Threading.SendOrPostCallback onListReferralSourcesCompletedDelegate;
        
        private BeginOperationDelegate onBeginListSalesWithPagingDelegate;
        
        private EndOperationDelegate onEndListSalesWithPagingDelegate;
        
        private System.Threading.SendOrPostCallback onListSalesWithPagingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSalesCountDelegate;
        
        private EndOperationDelegate onEndGetSalesCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetSalesCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginListSalespersonsDelegate;
        
        private EndOperationDelegate onEndListSalespersonsDelegate;
        
        private System.Threading.SendOrPostCallback onListSalespersonsCompletedDelegate;
        
        private BeginOperationDelegate onBeginListCustomersDelegate;
        
        private EndOperationDelegate onEndListCustomersDelegate;
        
        private System.Threading.SendOrPostCallback onListCustomersCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveSaleDelegate;
        
        private EndOperationDelegate onEndRetrieveSaleDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveSaleCompletedDelegate;
        
        private BeginOperationDelegate onBeginListSalesDelegate;
        
        private EndOperationDelegate onEndListSalesDelegate;
        
        private System.Threading.SendOrPostCallback onListSalesCompletedDelegate;
        
        private BeginOperationDelegate onBeginListTaxCodesDelegate;
        
        private EndOperationDelegate onEndListTaxCodesDelegate;
        
        private System.Threading.SendOrPostCallback onListTaxCodesCompletedDelegate;
        
        private BeginOperationDelegate onBeginListShippingMethodsDelegate;
        
        private EndOperationDelegate onEndListShippingMethodsDelegate;
        
        private System.Threading.SendOrPostCallback onListShippingMethodsCompletedDelegate;
        
        private BeginOperationDelegate onBeginListCommentsDelegate;
        
        private EndOperationDelegate onEndListCommentsDelegate;
        
        private System.Threading.SendOrPostCallback onListCommentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginListInvoiceTypesDelegate;
        
        private EndOperationDelegate onEndListInvoiceTypesDelegate;
        
        private System.Threading.SendOrPostCallback onListInvoiceTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginListCurrencyDelegate;
        
        private EndOperationDelegate onEndListCurrencyDelegate;
        
        private System.Threading.SendOrPostCallback onListCurrencyCompletedDelegate;
        
        private BeginOperationDelegate onBeginListInvoiceDeliveriesDelegate;
        
        private EndOperationDelegate onEndListInvoiceDeliveriesDelegate;
        
        private System.Threading.SendOrPostCallback onListInvoiceDeliveriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginListTermsDelegate;
        
        private EndOperationDelegate onEndListTermsDelegate;
        
        private System.Threading.SendOrPostCallback onListTermsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SaleServiceClient() {
        }
        
        public SaleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SaleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SaleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SaleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<DoListCompletedEventArgs> DoListCompleted;
        
        public event System.EventHandler<ListInvoiceStatusCompletedEventArgs> ListInvoiceStatusCompleted;
        
        public event System.EventHandler<ListReferralSourcesCompletedEventArgs> ListReferralSourcesCompleted;
        
        public event System.EventHandler<ListSalesWithPagingCompletedEventArgs> ListSalesWithPagingCompleted;
        
        public event System.EventHandler<GetSalesCountCompletedEventArgs> GetSalesCountCompleted;
        
        public event System.EventHandler<ListSalespersonsCompletedEventArgs> ListSalespersonsCompleted;
        
        public event System.EventHandler<ListCustomersCompletedEventArgs> ListCustomersCompleted;
        
        public event System.EventHandler<RetrieveSaleCompletedEventArgs> RetrieveSaleCompleted;
        
        public event System.EventHandler<ListSalesCompletedEventArgs> ListSalesCompleted;
        
        public event System.EventHandler<ListTaxCodesCompletedEventArgs> ListTaxCodesCompleted;
        
        public event System.EventHandler<ListShippingMethodsCompletedEventArgs> ListShippingMethodsCompleted;
        
        public event System.EventHandler<ListCommentsCompletedEventArgs> ListCommentsCompleted;
        
        public event System.EventHandler<ListInvoiceTypesCompletedEventArgs> ListInvoiceTypesCompleted;
        
        public event System.EventHandler<ListCurrencyCompletedEventArgs> ListCurrencyCompleted;
        
        public event System.EventHandler<ListInvoiceDeliveriesCompletedEventArgs> ListInvoiceDeliveriesCompleted;
        
        public event System.EventHandler<ListTermsCompletedEventArgs> ListTermsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginDoList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> Was.AccServiceRef.SaleService.EndDoList(System.IAsyncResult result) {
            return base.Channel.EndDoList(result);
        }
        
        private System.IAsyncResult OnBeginDoList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Was.AccServiceRef.SaleService)(this)).BeginDoList(callback, asyncState);
        }
        
        private object[] OnEndDoList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((Was.AccServiceRef.SaleService)(this)).EndDoList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoListCompleted(object state) {
            if ((this.DoListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoListCompleted(this, new DoListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoListAsync() {
            this.DoListAsync(null);
        }
        
        public void DoListAsync(object userState) {
            if ((this.onBeginDoListDelegate == null)) {
                this.onBeginDoListDelegate = new BeginOperationDelegate(this.OnBeginDoList);
            }
            if ((this.onEndDoListDelegate == null)) {
                this.onEndDoListDelegate = new EndOperationDelegate(this.OnEndDoList);
            }
            if ((this.onDoListCompletedDelegate == null)) {
                this.onDoListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoListCompleted);
            }
            base.InvokeAsync(this.onBeginDoListDelegate, null, this.onEndDoListDelegate, this.onDoListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginListInvoiceStatus(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListInvoiceStatus(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightStatus> Was.AccServiceRef.SaleService.EndListInvoiceStatus(System.IAsyncResult result) {
            return base.Channel.EndListInvoiceStatus(result);
        }
        
        private System.IAsyncResult OnBeginListInvoiceStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Was.AccServiceRef.SaleService)(this)).BeginListInvoiceStatus(callback, asyncState);
        }
        
        private object[] OnEndListInvoiceStatus(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightStatus> retVal = ((Was.AccServiceRef.SaleService)(this)).EndListInvoiceStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListInvoiceStatusCompleted(object state) {
            if ((this.ListInvoiceStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListInvoiceStatusCompleted(this, new ListInvoiceStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListInvoiceStatusAsync() {
            this.ListInvoiceStatusAsync(null);
        }
        
        public void ListInvoiceStatusAsync(object userState) {
            if ((this.onBeginListInvoiceStatusDelegate == null)) {
                this.onBeginListInvoiceStatusDelegate = new BeginOperationDelegate(this.OnBeginListInvoiceStatus);
            }
            if ((this.onEndListInvoiceStatusDelegate == null)) {
                this.onEndListInvoiceStatusDelegate = new EndOperationDelegate(this.OnEndListInvoiceStatus);
            }
            if ((this.onListInvoiceStatusCompletedDelegate == null)) {
                this.onListInvoiceStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListInvoiceStatusCompleted);
            }
            base.InvokeAsync(this.onBeginListInvoiceStatusDelegate, null, this.onEndListInvoiceStatusDelegate, this.onListInvoiceStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginListReferralSources(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListReferralSources(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightReferralSource> Was.AccServiceRef.SaleService.EndListReferralSources(System.IAsyncResult result) {
            return base.Channel.EndListReferralSources(result);
        }
        
        private System.IAsyncResult OnBeginListReferralSources(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Was.AccServiceRef.SaleService)(this)).BeginListReferralSources(callback, asyncState);
        }
        
        private object[] OnEndListReferralSources(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightReferralSource> retVal = ((Was.AccServiceRef.SaleService)(this)).EndListReferralSources(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListReferralSourcesCompleted(object state) {
            if ((this.ListReferralSourcesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListReferralSourcesCompleted(this, new ListReferralSourcesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListReferralSourcesAsync() {
            this.ListReferralSourcesAsync(null);
        }
        
        public void ListReferralSourcesAsync(object userState) {
            if ((this.onBeginListReferralSourcesDelegate == null)) {
                this.onBeginListReferralSourcesDelegate = new BeginOperationDelegate(this.OnBeginListReferralSources);
            }
            if ((this.onEndListReferralSourcesDelegate == null)) {
                this.onEndListReferralSourcesDelegate = new EndOperationDelegate(this.OnEndListReferralSources);
            }
            if ((this.onListReferralSourcesCompletedDelegate == null)) {
                this.onListReferralSourcesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListReferralSourcesCompleted);
            }
            base.InvokeAsync(this.onBeginListReferralSourcesDelegate, null, this.onEndListReferralSourcesDelegate, this.onListReferralSourcesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginListSalesWithPaging(System.DateTime start, System.DateTime end, System.Nullable<int> CustomerID, string InvoiceStatusID, int startIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListSalesWithPaging(start, end, CustomerID, InvoiceStatusID, startIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale> Was.AccServiceRef.SaleService.EndListSalesWithPaging(System.IAsyncResult result) {
            return base.Channel.EndListSalesWithPaging(result);
        }
        
        private System.IAsyncResult OnBeginListSalesWithPaging(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime start = ((System.DateTime)(inValues[0]));
            System.DateTime end = ((System.DateTime)(inValues[1]));
            System.Nullable<int> CustomerID = ((System.Nullable<int>)(inValues[2]));
            string InvoiceStatusID = ((string)(inValues[3]));
            int startIndex = ((int)(inValues[4]));
            int pageSize = ((int)(inValues[5]));
            return ((Was.AccServiceRef.SaleService)(this)).BeginListSalesWithPaging(start, end, CustomerID, InvoiceStatusID, startIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndListSalesWithPaging(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale> retVal = ((Was.AccServiceRef.SaleService)(this)).EndListSalesWithPaging(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListSalesWithPagingCompleted(object state) {
            if ((this.ListSalesWithPagingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListSalesWithPagingCompleted(this, new ListSalesWithPagingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListSalesWithPagingAsync(System.DateTime start, System.DateTime end, System.Nullable<int> CustomerID, string InvoiceStatusID, int startIndex, int pageSize) {
            this.ListSalesWithPagingAsync(start, end, CustomerID, InvoiceStatusID, startIndex, pageSize, null);
        }
        
        public void ListSalesWithPagingAsync(System.DateTime start, System.DateTime end, System.Nullable<int> CustomerID, string InvoiceStatusID, int startIndex, int pageSize, object userState) {
            if ((this.onBeginListSalesWithPagingDelegate == null)) {
                this.onBeginListSalesWithPagingDelegate = new BeginOperationDelegate(this.OnBeginListSalesWithPaging);
            }
            if ((this.onEndListSalesWithPagingDelegate == null)) {
                this.onEndListSalesWithPagingDelegate = new EndOperationDelegate(this.OnEndListSalesWithPaging);
            }
            if ((this.onListSalesWithPagingCompletedDelegate == null)) {
                this.onListSalesWithPagingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListSalesWithPagingCompleted);
            }
            base.InvokeAsync(this.onBeginListSalesWithPagingDelegate, new object[] {
                        start,
                        end,
                        CustomerID,
                        InvoiceStatusID,
                        startIndex,
                        pageSize}, this.onEndListSalesWithPagingDelegate, this.onListSalesWithPagingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginGetSalesCount(System.DateTime start, System.DateTime end, System.Nullable<int> CustomerID, string InvoiceStatusID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSalesCount(start, end, CustomerID, InvoiceStatusID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Was.AccServiceRef.SaleService.EndGetSalesCount(System.IAsyncResult result) {
            return base.Channel.EndGetSalesCount(result);
        }
        
        private System.IAsyncResult OnBeginGetSalesCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime start = ((System.DateTime)(inValues[0]));
            System.DateTime end = ((System.DateTime)(inValues[1]));
            System.Nullable<int> CustomerID = ((System.Nullable<int>)(inValues[2]));
            string InvoiceStatusID = ((string)(inValues[3]));
            return ((Was.AccServiceRef.SaleService)(this)).BeginGetSalesCount(start, end, CustomerID, InvoiceStatusID, callback, asyncState);
        }
        
        private object[] OnEndGetSalesCount(System.IAsyncResult result) {
            int retVal = ((Was.AccServiceRef.SaleService)(this)).EndGetSalesCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSalesCountCompleted(object state) {
            if ((this.GetSalesCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSalesCountCompleted(this, new GetSalesCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSalesCountAsync(System.DateTime start, System.DateTime end, System.Nullable<int> CustomerID, string InvoiceStatusID) {
            this.GetSalesCountAsync(start, end, CustomerID, InvoiceStatusID, null);
        }
        
        public void GetSalesCountAsync(System.DateTime start, System.DateTime end, System.Nullable<int> CustomerID, string InvoiceStatusID, object userState) {
            if ((this.onBeginGetSalesCountDelegate == null)) {
                this.onBeginGetSalesCountDelegate = new BeginOperationDelegate(this.OnBeginGetSalesCount);
            }
            if ((this.onEndGetSalesCountDelegate == null)) {
                this.onEndGetSalesCountDelegate = new EndOperationDelegate(this.OnEndGetSalesCount);
            }
            if ((this.onGetSalesCountCompletedDelegate == null)) {
                this.onGetSalesCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSalesCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetSalesCountDelegate, new object[] {
                        start,
                        end,
                        CustomerID,
                        InvoiceStatusID}, this.onEndGetSalesCountDelegate, this.onGetSalesCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginListSalespersons(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListSalespersons(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightEmployee> Was.AccServiceRef.SaleService.EndListSalespersons(System.IAsyncResult result) {
            return base.Channel.EndListSalespersons(result);
        }
        
        private System.IAsyncResult OnBeginListSalespersons(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Was.AccServiceRef.SaleService)(this)).BeginListSalespersons(callback, asyncState);
        }
        
        private object[] OnEndListSalespersons(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightEmployee> retVal = ((Was.AccServiceRef.SaleService)(this)).EndListSalespersons(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListSalespersonsCompleted(object state) {
            if ((this.ListSalespersonsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListSalespersonsCompleted(this, new ListSalespersonsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListSalespersonsAsync() {
            this.ListSalespersonsAsync(null);
        }
        
        public void ListSalespersonsAsync(object userState) {
            if ((this.onBeginListSalespersonsDelegate == null)) {
                this.onBeginListSalespersonsDelegate = new BeginOperationDelegate(this.OnBeginListSalespersons);
            }
            if ((this.onEndListSalespersonsDelegate == null)) {
                this.onEndListSalespersonsDelegate = new EndOperationDelegate(this.OnEndListSalespersons);
            }
            if ((this.onListSalespersonsCompletedDelegate == null)) {
                this.onListSalespersonsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListSalespersonsCompleted);
            }
            base.InvokeAsync(this.onBeginListSalespersonsDelegate, null, this.onEndListSalespersonsDelegate, this.onListSalespersonsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginListCustomers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListCustomers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCustomer> Was.AccServiceRef.SaleService.EndListCustomers(System.IAsyncResult result) {
            return base.Channel.EndListCustomers(result);
        }
        
        private System.IAsyncResult OnBeginListCustomers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Was.AccServiceRef.SaleService)(this)).BeginListCustomers(callback, asyncState);
        }
        
        private object[] OnEndListCustomers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCustomer> retVal = ((Was.AccServiceRef.SaleService)(this)).EndListCustomers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListCustomersCompleted(object state) {
            if ((this.ListCustomersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListCustomersCompleted(this, new ListCustomersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListCustomersAsync() {
            this.ListCustomersAsync(null);
        }
        
        public void ListCustomersAsync(object userState) {
            if ((this.onBeginListCustomersDelegate == null)) {
                this.onBeginListCustomersDelegate = new BeginOperationDelegate(this.OnBeginListCustomers);
            }
            if ((this.onEndListCustomersDelegate == null)) {
                this.onEndListCustomersDelegate = new EndOperationDelegate(this.OnEndListCustomers);
            }
            if ((this.onListCustomersCompletedDelegate == null)) {
                this.onListCustomersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListCustomersCompleted);
            }
            base.InvokeAsync(this.onBeginListCustomersDelegate, null, this.onEndListCustomersDelegate, this.onListCustomersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginRetrieveSale(System.Nullable<int> SaleID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveSale(SaleID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Was.AccServiceRef.LightSale2 Was.AccServiceRef.SaleService.EndRetrieveSale(System.IAsyncResult result) {
            return base.Channel.EndRetrieveSale(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveSale(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> SaleID = ((System.Nullable<int>)(inValues[0]));
            return ((Was.AccServiceRef.SaleService)(this)).BeginRetrieveSale(SaleID, callback, asyncState);
        }
        
        private object[] OnEndRetrieveSale(System.IAsyncResult result) {
            Was.AccServiceRef.LightSale2 retVal = ((Was.AccServiceRef.SaleService)(this)).EndRetrieveSale(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveSaleCompleted(object state) {
            if ((this.RetrieveSaleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveSaleCompleted(this, new RetrieveSaleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveSaleAsync(System.Nullable<int> SaleID) {
            this.RetrieveSaleAsync(SaleID, null);
        }
        
        public void RetrieveSaleAsync(System.Nullable<int> SaleID, object userState) {
            if ((this.onBeginRetrieveSaleDelegate == null)) {
                this.onBeginRetrieveSaleDelegate = new BeginOperationDelegate(this.OnBeginRetrieveSale);
            }
            if ((this.onEndRetrieveSaleDelegate == null)) {
                this.onEndRetrieveSaleDelegate = new EndOperationDelegate(this.OnEndRetrieveSale);
            }
            if ((this.onRetrieveSaleCompletedDelegate == null)) {
                this.onRetrieveSaleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveSaleCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveSaleDelegate, new object[] {
                        SaleID}, this.onEndRetrieveSaleDelegate, this.onRetrieveSaleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginListSales(System.DateTime start, System.DateTime end, System.Nullable<int> CustomerID, string InvoiceStatusID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListSales(start, end, CustomerID, InvoiceStatusID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale> Was.AccServiceRef.SaleService.EndListSales(System.IAsyncResult result) {
            return base.Channel.EndListSales(result);
        }
        
        private System.IAsyncResult OnBeginListSales(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime start = ((System.DateTime)(inValues[0]));
            System.DateTime end = ((System.DateTime)(inValues[1]));
            System.Nullable<int> CustomerID = ((System.Nullable<int>)(inValues[2]));
            string InvoiceStatusID = ((string)(inValues[3]));
            return ((Was.AccServiceRef.SaleService)(this)).BeginListSales(start, end, CustomerID, InvoiceStatusID, callback, asyncState);
        }
        
        private object[] OnEndListSales(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale> retVal = ((Was.AccServiceRef.SaleService)(this)).EndListSales(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListSalesCompleted(object state) {
            if ((this.ListSalesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListSalesCompleted(this, new ListSalesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListSalesAsync(System.DateTime start, System.DateTime end, System.Nullable<int> CustomerID, string InvoiceStatusID) {
            this.ListSalesAsync(start, end, CustomerID, InvoiceStatusID, null);
        }
        
        public void ListSalesAsync(System.DateTime start, System.DateTime end, System.Nullable<int> CustomerID, string InvoiceStatusID, object userState) {
            if ((this.onBeginListSalesDelegate == null)) {
                this.onBeginListSalesDelegate = new BeginOperationDelegate(this.OnBeginListSales);
            }
            if ((this.onEndListSalesDelegate == null)) {
                this.onEndListSalesDelegate = new EndOperationDelegate(this.OnEndListSales);
            }
            if ((this.onListSalesCompletedDelegate == null)) {
                this.onListSalesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListSalesCompleted);
            }
            base.InvokeAsync(this.onBeginListSalesDelegate, new object[] {
                        start,
                        end,
                        CustomerID,
                        InvoiceStatusID}, this.onEndListSalesDelegate, this.onListSalesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginListTaxCodes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListTaxCodes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTaxCode> Was.AccServiceRef.SaleService.EndListTaxCodes(System.IAsyncResult result) {
            return base.Channel.EndListTaxCodes(result);
        }
        
        private System.IAsyncResult OnBeginListTaxCodes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Was.AccServiceRef.SaleService)(this)).BeginListTaxCodes(callback, asyncState);
        }
        
        private object[] OnEndListTaxCodes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTaxCode> retVal = ((Was.AccServiceRef.SaleService)(this)).EndListTaxCodes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListTaxCodesCompleted(object state) {
            if ((this.ListTaxCodesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListTaxCodesCompleted(this, new ListTaxCodesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListTaxCodesAsync() {
            this.ListTaxCodesAsync(null);
        }
        
        public void ListTaxCodesAsync(object userState) {
            if ((this.onBeginListTaxCodesDelegate == null)) {
                this.onBeginListTaxCodesDelegate = new BeginOperationDelegate(this.OnBeginListTaxCodes);
            }
            if ((this.onEndListTaxCodesDelegate == null)) {
                this.onEndListTaxCodesDelegate = new EndOperationDelegate(this.OnEndListTaxCodes);
            }
            if ((this.onListTaxCodesCompletedDelegate == null)) {
                this.onListTaxCodesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListTaxCodesCompleted);
            }
            base.InvokeAsync(this.onBeginListTaxCodesDelegate, null, this.onEndListTaxCodesDelegate, this.onListTaxCodesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginListShippingMethods(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListShippingMethods(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightShippingMethod> Was.AccServiceRef.SaleService.EndListShippingMethods(System.IAsyncResult result) {
            return base.Channel.EndListShippingMethods(result);
        }
        
        private System.IAsyncResult OnBeginListShippingMethods(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Was.AccServiceRef.SaleService)(this)).BeginListShippingMethods(callback, asyncState);
        }
        
        private object[] OnEndListShippingMethods(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightShippingMethod> retVal = ((Was.AccServiceRef.SaleService)(this)).EndListShippingMethods(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListShippingMethodsCompleted(object state) {
            if ((this.ListShippingMethodsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListShippingMethodsCompleted(this, new ListShippingMethodsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListShippingMethodsAsync() {
            this.ListShippingMethodsAsync(null);
        }
        
        public void ListShippingMethodsAsync(object userState) {
            if ((this.onBeginListShippingMethodsDelegate == null)) {
                this.onBeginListShippingMethodsDelegate = new BeginOperationDelegate(this.OnBeginListShippingMethods);
            }
            if ((this.onEndListShippingMethodsDelegate == null)) {
                this.onEndListShippingMethodsDelegate = new EndOperationDelegate(this.OnEndListShippingMethods);
            }
            if ((this.onListShippingMethodsCompletedDelegate == null)) {
                this.onListShippingMethodsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListShippingMethodsCompleted);
            }
            base.InvokeAsync(this.onBeginListShippingMethodsDelegate, null, this.onEndListShippingMethodsDelegate, this.onListShippingMethodsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginListComments(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListComments(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightComment> Was.AccServiceRef.SaleService.EndListComments(System.IAsyncResult result) {
            return base.Channel.EndListComments(result);
        }
        
        private System.IAsyncResult OnBeginListComments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Was.AccServiceRef.SaleService)(this)).BeginListComments(callback, asyncState);
        }
        
        private object[] OnEndListComments(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightComment> retVal = ((Was.AccServiceRef.SaleService)(this)).EndListComments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListCommentsCompleted(object state) {
            if ((this.ListCommentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListCommentsCompleted(this, new ListCommentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListCommentsAsync() {
            this.ListCommentsAsync(null);
        }
        
        public void ListCommentsAsync(object userState) {
            if ((this.onBeginListCommentsDelegate == null)) {
                this.onBeginListCommentsDelegate = new BeginOperationDelegate(this.OnBeginListComments);
            }
            if ((this.onEndListCommentsDelegate == null)) {
                this.onEndListCommentsDelegate = new EndOperationDelegate(this.OnEndListComments);
            }
            if ((this.onListCommentsCompletedDelegate == null)) {
                this.onListCommentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListCommentsCompleted);
            }
            base.InvokeAsync(this.onBeginListCommentsDelegate, null, this.onEndListCommentsDelegate, this.onListCommentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginListInvoiceTypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListInvoiceTypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceType> Was.AccServiceRef.SaleService.EndListInvoiceTypes(System.IAsyncResult result) {
            return base.Channel.EndListInvoiceTypes(result);
        }
        
        private System.IAsyncResult OnBeginListInvoiceTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Was.AccServiceRef.SaleService)(this)).BeginListInvoiceTypes(callback, asyncState);
        }
        
        private object[] OnEndListInvoiceTypes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceType> retVal = ((Was.AccServiceRef.SaleService)(this)).EndListInvoiceTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListInvoiceTypesCompleted(object state) {
            if ((this.ListInvoiceTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListInvoiceTypesCompleted(this, new ListInvoiceTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListInvoiceTypesAsync() {
            this.ListInvoiceTypesAsync(null);
        }
        
        public void ListInvoiceTypesAsync(object userState) {
            if ((this.onBeginListInvoiceTypesDelegate == null)) {
                this.onBeginListInvoiceTypesDelegate = new BeginOperationDelegate(this.OnBeginListInvoiceTypes);
            }
            if ((this.onEndListInvoiceTypesDelegate == null)) {
                this.onEndListInvoiceTypesDelegate = new EndOperationDelegate(this.OnEndListInvoiceTypes);
            }
            if ((this.onListInvoiceTypesCompletedDelegate == null)) {
                this.onListInvoiceTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListInvoiceTypesCompleted);
            }
            base.InvokeAsync(this.onBeginListInvoiceTypesDelegate, null, this.onEndListInvoiceTypesDelegate, this.onListInvoiceTypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginListCurrency(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListCurrency(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCurrency> Was.AccServiceRef.SaleService.EndListCurrency(System.IAsyncResult result) {
            return base.Channel.EndListCurrency(result);
        }
        
        private System.IAsyncResult OnBeginListCurrency(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Was.AccServiceRef.SaleService)(this)).BeginListCurrency(callback, asyncState);
        }
        
        private object[] OnEndListCurrency(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCurrency> retVal = ((Was.AccServiceRef.SaleService)(this)).EndListCurrency(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListCurrencyCompleted(object state) {
            if ((this.ListCurrencyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListCurrencyCompleted(this, new ListCurrencyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListCurrencyAsync() {
            this.ListCurrencyAsync(null);
        }
        
        public void ListCurrencyAsync(object userState) {
            if ((this.onBeginListCurrencyDelegate == null)) {
                this.onBeginListCurrencyDelegate = new BeginOperationDelegate(this.OnBeginListCurrency);
            }
            if ((this.onEndListCurrencyDelegate == null)) {
                this.onEndListCurrencyDelegate = new EndOperationDelegate(this.OnEndListCurrency);
            }
            if ((this.onListCurrencyCompletedDelegate == null)) {
                this.onListCurrencyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListCurrencyCompleted);
            }
            base.InvokeAsync(this.onBeginListCurrencyDelegate, null, this.onEndListCurrencyDelegate, this.onListCurrencyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginListInvoiceDeliveries(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListInvoiceDeliveries(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceDelivery> Was.AccServiceRef.SaleService.EndListInvoiceDeliveries(System.IAsyncResult result) {
            return base.Channel.EndListInvoiceDeliveries(result);
        }
        
        private System.IAsyncResult OnBeginListInvoiceDeliveries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Was.AccServiceRef.SaleService)(this)).BeginListInvoiceDeliveries(callback, asyncState);
        }
        
        private object[] OnEndListInvoiceDeliveries(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceDelivery> retVal = ((Was.AccServiceRef.SaleService)(this)).EndListInvoiceDeliveries(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListInvoiceDeliveriesCompleted(object state) {
            if ((this.ListInvoiceDeliveriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListInvoiceDeliveriesCompleted(this, new ListInvoiceDeliveriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListInvoiceDeliveriesAsync() {
            this.ListInvoiceDeliveriesAsync(null);
        }
        
        public void ListInvoiceDeliveriesAsync(object userState) {
            if ((this.onBeginListInvoiceDeliveriesDelegate == null)) {
                this.onBeginListInvoiceDeliveriesDelegate = new BeginOperationDelegate(this.OnBeginListInvoiceDeliveries);
            }
            if ((this.onEndListInvoiceDeliveriesDelegate == null)) {
                this.onEndListInvoiceDeliveriesDelegate = new EndOperationDelegate(this.OnEndListInvoiceDeliveries);
            }
            if ((this.onListInvoiceDeliveriesCompletedDelegate == null)) {
                this.onListInvoiceDeliveriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListInvoiceDeliveriesCompleted);
            }
            base.InvokeAsync(this.onBeginListInvoiceDeliveriesDelegate, null, this.onEndListInvoiceDeliveriesDelegate, this.onListInvoiceDeliveriesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Was.AccServiceRef.SaleService.BeginListTerms(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListTerms(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTerms> Was.AccServiceRef.SaleService.EndListTerms(System.IAsyncResult result) {
            return base.Channel.EndListTerms(result);
        }
        
        private System.IAsyncResult OnBeginListTerms(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Was.AccServiceRef.SaleService)(this)).BeginListTerms(callback, asyncState);
        }
        
        private object[] OnEndListTerms(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTerms> retVal = ((Was.AccServiceRef.SaleService)(this)).EndListTerms(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListTermsCompleted(object state) {
            if ((this.ListTermsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListTermsCompleted(this, new ListTermsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListTermsAsync() {
            this.ListTermsAsync(null);
        }
        
        public void ListTermsAsync(object userState) {
            if ((this.onBeginListTermsDelegate == null)) {
                this.onBeginListTermsDelegate = new BeginOperationDelegate(this.OnBeginListTerms);
            }
            if ((this.onEndListTermsDelegate == null)) {
                this.onEndListTermsDelegate = new EndOperationDelegate(this.OnEndListTerms);
            }
            if ((this.onListTermsCompletedDelegate == null)) {
                this.onListTermsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListTermsCompleted);
            }
            base.InvokeAsync(this.onBeginListTermsDelegate, null, this.onEndListTermsDelegate, this.onListTermsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Was.AccServiceRef.SaleService CreateChannel() {
            return new SaleServiceClientChannel(this);
        }
        
        private class SaleServiceClientChannel : ChannelBase<Was.AccServiceRef.SaleService>, Was.AccServiceRef.SaleService {
            
            public SaleServiceClientChannel(System.ServiceModel.ClientBase<Was.AccServiceRef.SaleService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndDoList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("DoList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListInvoiceStatus(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListInvoiceStatus", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightStatus> EndListInvoiceStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightStatus> _result = ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightStatus>)(base.EndInvoke("ListInvoiceStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListReferralSources(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListReferralSources", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightReferralSource> EndListReferralSources(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightReferralSource> _result = ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightReferralSource>)(base.EndInvoke("ListReferralSources", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListSalesWithPaging(System.DateTime start, System.DateTime end, System.Nullable<int> CustomerID, string InvoiceStatusID, int startIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = start;
                _args[1] = end;
                _args[2] = CustomerID;
                _args[3] = InvoiceStatusID;
                _args[4] = startIndex;
                _args[5] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("ListSalesWithPaging", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale> EndListSalesWithPaging(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale> _result = ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale>)(base.EndInvoke("ListSalesWithPaging", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSalesCount(System.DateTime start, System.DateTime end, System.Nullable<int> CustomerID, string InvoiceStatusID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = start;
                _args[1] = end;
                _args[2] = CustomerID;
                _args[3] = InvoiceStatusID;
                System.IAsyncResult _result = base.BeginInvoke("GetSalesCount", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetSalesCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetSalesCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListSalespersons(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListSalespersons", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightEmployee> EndListSalespersons(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightEmployee> _result = ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightEmployee>)(base.EndInvoke("ListSalespersons", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListCustomers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListCustomers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCustomer> EndListCustomers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCustomer> _result = ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCustomer>)(base.EndInvoke("ListCustomers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveSale(System.Nullable<int> SaleID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = SaleID;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveSale", _args, callback, asyncState);
                return _result;
            }
            
            public Was.AccServiceRef.LightSale2 EndRetrieveSale(System.IAsyncResult result) {
                object[] _args = new object[0];
                Was.AccServiceRef.LightSale2 _result = ((Was.AccServiceRef.LightSale2)(base.EndInvoke("RetrieveSale", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListSales(System.DateTime start, System.DateTime end, System.Nullable<int> CustomerID, string InvoiceStatusID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = start;
                _args[1] = end;
                _args[2] = CustomerID;
                _args[3] = InvoiceStatusID;
                System.IAsyncResult _result = base.BeginInvoke("ListSales", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale> EndListSales(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale> _result = ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightSale>)(base.EndInvoke("ListSales", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListTaxCodes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListTaxCodes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTaxCode> EndListTaxCodes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTaxCode> _result = ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTaxCode>)(base.EndInvoke("ListTaxCodes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListShippingMethods(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListShippingMethods", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightShippingMethod> EndListShippingMethods(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightShippingMethod> _result = ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightShippingMethod>)(base.EndInvoke("ListShippingMethods", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListComments(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListComments", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightComment> EndListComments(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightComment> _result = ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightComment>)(base.EndInvoke("ListComments", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListInvoiceTypes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListInvoiceTypes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceType> EndListInvoiceTypes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceType> _result = ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceType>)(base.EndInvoke("ListInvoiceTypes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListCurrency(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListCurrency", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCurrency> EndListCurrency(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCurrency> _result = ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightCurrency>)(base.EndInvoke("ListCurrency", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListInvoiceDeliveries(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListInvoiceDeliveries", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceDelivery> EndListInvoiceDeliveries(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceDelivery> _result = ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightInvoiceDelivery>)(base.EndInvoke("ListInvoiceDeliveries", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListTerms(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListTerms", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTerms> EndListTerms(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTerms> _result = ((System.Collections.ObjectModel.ObservableCollection<Was.AccServiceRef.LightTerms>)(base.EndInvoke("ListTerms", _args, result)));
                return _result;
            }
        }
    }
}
